1.Swagger使用说明:通过配置节省程序员编写接口文档的工作。
    1.1. 前台访问地址：http://localhost:8080/swagger-ui.html
    1.2. 通过在控制器中增加注解达到需求：
            @ApiOperation(value="通过Redis中的Key获取对应的Value值", notes="获取Redis的Value")
            @ApiImplicitParam(name = "key", value = "Redis的key值", paramType = "query", dataType = "String")
            效果图：resources/pictures/01.png
            代码：RedisController中的【get_Redis_Value】方法
    1.3. 通过前台Swagger页面的增删改查可以操作redis中的数据，至于怎么建立项目与redis的关联关系，详情见下面说明。

2.redis功能点说明：
    2.1. 先在本地下载安装Redis的管理工具【RedisDesktopManager】，用来核对数据是否操作成功。
        2.1.1. 连接【RedisDesktopManager】的Name:自己随便起
        2.1.2. 连接【RedisDesktopManager】的Address:180.76.112.248
        2.1.3. 连接【RedisDesktopManager】的Auth:oig#123456
        2.1.4. 连接【RedisDesktopManager】的端口号:6379不用变
    2.2. redis的配置信息参考application.properties以及spring-context-jedis中redis相关配置内容。
    2.3. redis所在服务器：180.76.112.248  服务器密码：oig#123456
    2.4. redis的增删改查所封装的方法都在com/springboot/RedisUtils/RedisUtils中，具体怎么使用，参考com/springboot/controller/RedisController中的
         增删改查方法。
    2.5. 服务器关于redis的相关命令：
        2.5.1. 查看redis的服务状态,得到PID：  ps aux|grep redis-service
        2.5.2. 查看redis的端口状态：netstat -tunple|grep +端口号
        2.5.3. 启动redis服务：systemctl start redis.service
        2.5.4. 重启redis服务：systemctl restart redis.service
        2.5.5. 停止redis服务：systemctl stop redis.service
        2.5.6. 启用redis服务：systemctl enable redis.service

3.mybatis功能点说明：
    3.1. 